// Generated by CoffeeScript 1.3.3
/*
  put all the shops into one collection, which is called 'shops'
  e.g:
  @shop_model = Mongoose.model('shops',@shop_schema)
*/

var Mongoose, Schema, SchemaDesigner;

Mongoose = require("mongoose");

Schema = Mongoose.Schema;

Mongoose.connect("mongodb://127.0.0.1:27017/shops");

SchemaDesigner = (function() {

  function SchemaDesigner() {
    this.shop_schema = new Schema({
      shopname: {
        type: String,
        "default": 'fullname'
      },
      shopalias: [
        {
          type: String,
          "default": 'short name'
        }
      ],
      shopvisit: {
        type: Number,
        "default": 1000
      },
      shoppriority: {
        type: Number,
        "default": 1000
      },
      shopwebsite: {
        type: String,
        "default": 'fullurl'
      },
      shopphone: {
        type: Array,
        "default": ['010-22222222']
      },
      shoponbusiness: {
        type: Boolean,
        "default": true
      },
      monday: {
        type: Array,
        "default": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      },
      tuesday: {
        type: Array,
        "default": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      },
      wednesday: {
        type: Array,
        "default": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      },
      thurday: {
        type: Array,
        "default": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      },
      friday: {
        type: Array,
        "default": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      },
      saturday: {
        type: Array,
        "default": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      },
      sunday: {
        type: Array,
        "default": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      },
      weekday: {
        type: Array,
        "default": [0, 0, 0, 0, 0]
      },
      weekdaygood: {
        type: Array,
        "default": [0, 0, 0, 0, 0]
      },
      weekdaybad: {
        type: Array,
        "default": [0, 0, 0, 0, 0]
      },
      shopdaystats: {
        type: Array,
        "default": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      },
      shopmonthstats: {
        type: Array,
        "default": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      },
      shoplogo: {
        type: String,
        "default": './images/default.jpg'
      },
      shopgoodt: {
        type: Number,
        "default": 0
      },
      shopbadt: {
        type: Number,
        "default": 0
      },
      shopcover: {
        type: Array,
        "default": ['beijing', 'shanghai']
      },
      shopaccount: {
        type: Number,
        "default": 0
      },
      shopcreatetime: {
        type: Date,
        "default": Date.now
      },
      shopcomments: {
        type: Array,
        "default": ['good commnets']
      },
      shopnews: {
        type: Array,
        "default": ['good news']
      }
    });
    this.shop_model = Mongoose.model('shops', this.shop_schema);
    this.conn = Mongoose.connection;
    this.conn.on('error', console.error.bind(console, 'connection error:'));
    this.conn.once('open', function() {
      return logger.info("success to open mongodb");
    });
    return;
  }

  SchemaDesigner.prototype.insert_shop = function(shop) {
    var shop_doc;
    logger.info("begin to insert_shop");
    shop_doc = new this.shop_model(shop);
    return shop_doc.save(function(err, doc) {});
  };

  SchemaDesigner.prototype.find_shops = function(callback) {
    return this.shop_model.find().sort('-shoppriority').select('shoplogo shopname').exec(callback);
  };

  SchemaDesigner.prototype.find = function(condition, fields, callback) {
    var _this = this;
    if (!(callback != null)) {
      return this.shop_model.find(condition, fields, function(err, docs) {
        if (err != null) {
          logger.info("find: " + err);
        }
        return _this.cachedata = docs;
      });
    } else {
      return this.shop_model.find(condition, fields, callback);
    }
  };

  return SchemaDesigner;

})();

module.exports = SchemaDesigner;
